From: 張俊芝 <zjz@zjz.name>

Bug 1485581 - Make nsImageFrame report intrinsic inline sizes in the correct dimension (height) when writing-mode is vertical.  r=dbaron

diff --git a/layout/generic/nsFrame.h b/layout/generic/nsFrame.h
--- a/layout/generic/nsFrame.h
+++ b/layout/generic/nsFrame.h
@@ -849,16 +849,18 @@ public:
   };
 
 #define DISPLAY_REFLOW(dr_pres_context, dr_frame, dr_rf_state, dr_rf_metrics, dr_rf_status) \
   DR_cookie dr_cookie(dr_pres_context, dr_frame, dr_rf_state, dr_rf_metrics, dr_rf_status);
 #define DISPLAY_REFLOW_CHANGE() \
   dr_cookie.Change();
 #define DISPLAY_LAYOUT(dr_frame) \
   DR_layout_cookie dr_cookie(dr_frame);
+// FIXME DISPLAY_*_WIDTH should go through a renaming refactoring to reflect the
+// fact that it's displaying a minimum inline size, not a minimum width.
 #define DISPLAY_MIN_WIDTH(dr_frame, dr_result) \
   DR_intrinsic_width_cookie dr_cookie(dr_frame, "Min", dr_result)
 #define DISPLAY_PREF_WIDTH(dr_frame, dr_result) \
   DR_intrinsic_width_cookie dr_cookie(dr_frame, "Pref", dr_result)
 #define DISPLAY_PREF_SIZE(dr_frame, dr_result) \
   DR_intrinsic_size_cookie dr_cookie(dr_frame, "Pref", dr_result)
 #define DISPLAY_MIN_SIZE(dr_frame, dr_result) \
   DR_intrinsic_size_cookie dr_cookie(dr_frame, "Min", dr_result)
diff --git a/layout/generic/nsImageFrame.cpp b/layout/generic/nsImageFrame.cpp
--- a/layout/generic/nsImageFrame.cpp
+++ b/layout/generic/nsImageFrame.cpp
@@ -1029,36 +1029,38 @@ nsImageFrame::GetContinuationOffset() co
   }
   NS_ASSERTION(offset >= 0, "bogus GetContentRect");
   return offset;
 }
 
 /* virtual */ nscoord
 nsImageFrame::GetMinISize(gfxContext *aRenderingContext)
 {
-  // XXX The caller doesn't account for constraints of the height,
-  // min-height, and max-height properties.
+  // XXX The caller doesn't account for constraints of the block-size,
+  // min-block-size, and max-block-size properties.
   DebugOnly<nscoord> result;
   DISPLAY_MIN_WIDTH(this, result);
   EnsureIntrinsicSizeAndRatio();
-  return mIntrinsicSize.width.GetUnit() == eStyleUnit_Coord ?
-    mIntrinsicSize.width.GetCoordValue() : 0;
+  const nsStyleCoord& iSize = GetWritingMode().IsVertical() ?
+                                mIntrinsicSize.height : mIntrinsicSize.width;
+  return iSize.GetUnit() == eStyleUnit_Coord ? iSize.GetCoordValue() : 0;
 }
 
 /* virtual */ nscoord
 nsImageFrame::GetPrefISize(gfxContext *aRenderingContext)
 {
-  // XXX The caller doesn't account for constraints of the height,
-  // min-height, and max-height properties.
+  // XXX The caller doesn't account for constraints of the block-size,
+  // min-block-size, and max-block-size properties.
   DebugOnly<nscoord> result;
   DISPLAY_PREF_WIDTH(this, result);
   EnsureIntrinsicSizeAndRatio();
+  const nsStyleCoord& iSize = GetWritingMode().IsVertical() ?
+                                mIntrinsicSize.height : mIntrinsicSize.width;
   // convert from normal twips to scaled twips (printing...)
-  return mIntrinsicSize.width.GetUnit() == eStyleUnit_Coord ?
-    mIntrinsicSize.width.GetCoordValue() : 0;
+  return iSize.GetUnit() == eStyleUnit_Coord ? iSize.GetCoordValue() : 0;
 }
 
 /* virtual */ IntrinsicSize
 nsImageFrame::GetIntrinsicSize()
 {
   return mIntrinsicSize;
 }
 
diff --git a/testing/web-platform/meta/MANIFEST.json b/testing/web-platform/meta/MANIFEST.json
--- a/testing/web-platform/meta/MANIFEST.json
+++ b/testing/web-platform/meta/MANIFEST.json
@@ -159726,16 +159726,40 @@
       [
        "/css/css-writing-modes/horizontal-rule-vrl-004-ref.xht",
        "=="
       ]
      ],
      {}
     ]
    ],
+   "css/css-writing-modes/img-intrinsic-size-contribution-001.html": [
+    [
+     "/css/css-writing-modes/img-intrinsic-size-contribution-001.html",
+     [
+      [
+       "/css/css-writing-modes/img-intrinsic-size-contribution-ref.html",
+       "=="
+      ]
+     ],
+     {}
+    ]
+   ],
+   "css/css-writing-modes/img-intrinsic-size-contribution-002.html": [
+    [
+     "/css/css-writing-modes/img-intrinsic-size-contribution-002.html",
+     [
+      [
+       "/css/css-writing-modes/img-intrinsic-size-contribution-ref.html",
+       "=="
+      ]
+     ],
+     {}
+    ]
+   ],
    "css/css-writing-modes/inline-block-alignment-002.xht": [
     [
      "/css/css-writing-modes/inline-block-alignment-002.xht",
      [
       [
        "/css/css-writing-modes/inline-block-alignment-002-ref.xht",
        "=="
       ]
@@ -266333,16 +266357,21 @@
      {}
     ]
    ],
    "css/css-writing-modes/horizontal-rule-vrl-004-ref.xht": [
     [
      {}
     ]
    ],
+   "css/css-writing-modes/img-intrinsic-size-contribution-ref.html": [
+    [
+     {}
+    ]
+   ],
    "css/css-writing-modes/inline-block-alignment-002-ref.xht": [
     [
      {}
     ]
    ],
    "css/css-writing-modes/inline-block-alignment-003-ref.xht": [
     [
      {}
@@ -267793,16 +267822,21 @@
      {}
     ]
    ],
    "css/css-writing-modes/support/block-flow-direction-066-exp-res.png": [
     [
      {}
     ]
    ],
+   "css/css-writing-modes/support/blue-200x100.png": [
+    [
+     {}
+    ]
+   ],
    "css/css-writing-modes/support/blue-horiz-line-220x1.png": [
     [
      {}
     ]
    ],
    "css/css-writing-modes/support/blue-horiz-line-320x1.png": [
     [
      {}
@@ -565601,16 +565635,28 @@
   "css/css-writing-modes/horizontal-rule-vrl-004-ref.xht": [
    "b64d2b2c429b309ade08ba061b387a524bce3d27",
    "support"
   ],
   "css/css-writing-modes/horizontal-rule-vrl-004.xht": [
    "d33fb6f6d119443f41217c2ac1b808cb3eb79b7f",
    "reftest"
   ],
+  "css/css-writing-modes/img-intrinsic-size-contribution-001.html": [
+   "08500537f87cdccc1e0736bbaea483b61b690630",
+   "reftest"
+  ],
+  "css/css-writing-modes/img-intrinsic-size-contribution-002.html": [
+   "df0ccf2093bf878200e719cc4f66c70d9832a8a0",
+   "reftest"
+  ],
+  "css/css-writing-modes/img-intrinsic-size-contribution-ref.html": [
+   "ffda7d62ba963ed693e14547adce6592a11f5657",
+   "support"
+  ],
   "css/css-writing-modes/inline-block-alignment-002-ref.xht": [
    "ce478e7499247e6277482b9c16c9dd2b1b76f275",
    "support"
   ],
   "css/css-writing-modes/inline-block-alignment-002.xht": [
    "7568c087d2caca5e2f48762ab570960e6bca92e1",
    "reftest"
   ],
@@ -568029,16 +568075,20 @@
   "css/css-writing-modes/support/block-flow-direction-025-exp-res.png": [
    "851eeea03982414e3e707cc7d3d0d83d760c118f",
    "support"
   ],
   "css/css-writing-modes/support/block-flow-direction-066-exp-res.png": [
    "d325b15a4cf3f12e54adf85c3691de11bebac057",
    "support"
   ],
+  "css/css-writing-modes/support/blue-200x100.png": [
+   "e32c47dd1ee8f250025b930a78ce076889af942d",
+   "support"
+  ],
   "css/css-writing-modes/support/blue-horiz-line-220x1.png": [
    "3898d5a2d9eb14ad80343ecbcd9d8216d2e2f755",
    "support"
   ],
   "css/css-writing-modes/support/blue-horiz-line-320x1.png": [
    "7d9151c848aa9b6d59fc9d61d6c7a47b462c9325",
    "support"
   ],
@@ -637022,17 +637072,17 @@
    "327bc92f75d4732e76330f1105d0e5b409c03b22",
    "testharness"
   ],
   "streams/readable-streams/patched-global.html": [
    "869e9109e025e5e2391d51d336f03e6df335fd69",
    "testharness"
   ],
   "streams/readable-streams/patched-global.js": [
-   "e8117c480484a3b6a83ecf10d1b9c8c61c5d02ca",
+   "c75b21e8c38573e6ce70b71ce6887a21f2d853e2",
    "support"
   ],
   "streams/readable-streams/patched-global.serviceworker.https.html": [
    "addb438ba6fe407662232f97bb6c2583f3f17cf4",
    "testharness"
   ],
   "streams/readable-streams/patched-global.sharedworker.html": [
    "6dba52fa67f53c4c0437ebd4ad7166ca5ceb1d7d",
@@ -637262,17 +637312,17 @@
    "327bc92f75d4732e76330f1105d0e5b409c03b22",
    "testharness"
   ],
   "streams/transform-streams/patched-global.html": [
    "869e9109e025e5e2391d51d336f03e6df335fd69",
    "testharness"
   ],
   "streams/transform-streams/patched-global.js": [
-   "d27b9cdd119edad098120f2b867cf9229f575af5",
+   "f5d32c08ea730044436d40fa500c425e422d6f25",
    "support"
   ],
   "streams/transform-streams/patched-global.serviceworker.https.html": [
    "addb438ba6fe407662232f97bb6c2583f3f17cf4",
    "testharness"
   ],
   "streams/transform-streams/patched-global.sharedworker.html": [
    "6dba52fa67f53c4c0437ebd4ad7166ca5ceb1d7d",
diff --git a/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-001.html b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-001.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-001.html
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html style="writing-mode: vertical-lr;">
+<title>CSS Test: intrinsic size contributions of images in vertical writing mode</title>
+<meta name="assert" content="The image's parent element's intrinsic inline size should be contributed to by the image's height, not the image's width">
+<link rel="help" href="http://www.w3.org/TR/css-writing-modes-3/#vertical-layout" title="7.1 Principles of Layout in Vertical Writing Modes">
+<link rel="author" title="Zhang Junzhi" href="mailto:zjz@zjz.name">
+<link rel="match" href="img-intrinsic-size-contribution-ref.html">
+
+<style>
+* { margin: 0; padding: 0; }
+</style>
+
+<div style="border: 1px solid blue; display: grid; height: 150px;">
+	<div style="border: 1px solid orange;">
+		<img src="support/blue-200x100.png">
+	</div>
+</div>
+
+</html>
diff --git a/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-002.html b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-002.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-002.html
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html style="writing-mode: vertical-lr;">
+<title>CSS Test: intrinsic size contributions of images in vertical writing mode (with the image itself in horizontal writing mode)</title>
+<meta name="assert" content="The image's parent element's intrinsic inline size should be contributed to by the image's height, not the image's width">
+<link rel="help" href="http://www.w3.org/TR/css-writing-modes-3/#vertical-layout" title="7.1 Principles of Layout in Vertical Writing Modes">
+<link rel="author" title="Zhang Junzhi" href="mailto:zjz@zjz.name">
+<link rel="match" href="img-intrinsic-size-contribution-ref.html">
+
+<style>
+* { margin: 0; padding: 0; }
+</style>
+
+<div style="border: 1px solid blue; display: grid; height: 150px;">
+	<div style="border: 1px solid orange;">
+		<img src="support/blue-200x100.png" style="writing-mode: horizontal-tb;">
+	</div>
+</div>
+
+</html>
diff --git a/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-ref.html b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-ref.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/css/css-writing-modes/img-intrinsic-size-contribution-ref.html
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<html>
+<title>CSS Test Reference: intrinsic size contributions of images in vertical writing mode</title>
+<link rel="author" title="Zhang Junzhi" href="mailto:zjz@zjz.name">
+
+<style>
+* { margin: 0; padding: 0; }
+</style>
+
+<div style="border: 1px solid blue; height: 150px; width: 202px;">
+	<div style="border: 1px solid orange; height: 148px;">
+		<img src="support/blue-200x100.png">
+	</div>
+</div>
+
+</html>
diff --git a/testing/web-platform/tests/css/css-writing-modes/support/blue-200x100.png b/testing/web-platform/tests/css/css-writing-modes/support/blue-200x100.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..e32c47dd1ee8f250025b930a78ce076889af942d
GIT binary patch
literal 257
zc%17D@N?(olHy`uVBq!ia0vp^CxAGGg9%9bJb4iV67Y0!45_&F_L89>0|UpA4ebBt
z9b{p4R$6%7ORZq7>VXIe?&QXe24csUk`r}$SdSe73iPxB1%Tp-IzaJ55eYg#0eULL
d)Y*MstYa<X@%cd)yMcaU@O1TaS?83{1OOqQSfKy_

