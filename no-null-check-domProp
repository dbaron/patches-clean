From: L. David Baron <dbaron@dbaron.org>

No longer need to null-check domProp in style system mochitests now that bug 374216 has landed.

diff --git a/layout/style/test/test_inherit_storage.html b/layout/style/test/test_inherit_storage.html
--- a/layout/style/test/test_inherit_storage.html
+++ b/layout/style/test/test_inherit_storage.html
@@ -28,38 +28,34 @@ var gDeclaration = document.getElementBy
 function test_property(property)
 {
   var info = gCSSProperties[property];
 
   function check_initial(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     var val = gDeclaration.getPropertyValue(sproperty);
     is(val, "", "value of '" + sproperty + "' before we do anything");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
   }
   check_initial(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_initial(info.subproperties[idx]);
 
   gDeclaration.setProperty(property, "inherit", "");
 
   function check_set(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     val = gDeclaration.getPropertyValue(sproperty);
     is(val, "inherit",
        "inherit reported back for property '" + sproperty + "'");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty +
-         "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty +
+       "') and decl." + sinfo.domProp);
   }
   check_set(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_set(info.subproperties[idx]);
 
   // We don't care particularly about the whitespace or the placement of
   // semicolons, but for simplicity we'll test the current behavior.
@@ -67,20 +63,18 @@ function test_property(property)
     "declaration should serialize to exactly what went in (for inherit)");
 
   gDeclaration.removeProperty(property);
 
   function check_final(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     var val = gDeclaration.getPropertyValue(sproperty);
     is(val, "", "value of '" + sproperty + "' after removal of value");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
   }
   check_final(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_final(info.subproperties[idx]);
 }
 
 for (var prop in gCSSProperties)
diff --git a/layout/style/test/test_initial_storage.html b/layout/style/test/test_initial_storage.html
--- a/layout/style/test/test_initial_storage.html
+++ b/layout/style/test/test_initial_storage.html
@@ -28,38 +28,34 @@ var gDeclaration = document.getElementBy
 function test_property(property)
 {
   var info = gCSSProperties[property];
 
   function check_initial(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     var val = gDeclaration.getPropertyValue(sproperty);
     is(val, "", "value of '" + sproperty + "' before we do anything");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
   }
   check_initial(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_initial(info.subproperties[idx]);
 
   gDeclaration.setProperty(property, "-moz-initial", "");
 
   function check_set(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     val = gDeclaration.getPropertyValue(sproperty);
     is(val, "-moz-initial",
        "-moz-initial reported back for property '" + sproperty + "'");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty +
-         "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty +
+       "') and decl." + sinfo.domProp);
   }
   check_set(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_set(info.subproperties[idx]);
 
   // We don't care particularly about the whitespace or the placement of
   // semicolons, but for simplicity we'll test the current behavior.
@@ -67,20 +63,18 @@ function test_property(property)
     "declaration should serialize to exactly what went in (for -moz-initial)");
 
   gDeclaration.removeProperty(property);
 
   function check_final(sproperty) {
     var sinfo = gCSSProperties[sproperty];
     var val = gDeclaration.getPropertyValue(sproperty);
     is(val, "", "value of '" + sproperty + "' after removal of value");
-    if (sinfo.domProp) {
-      is(val, gDeclaration[sinfo.domProp],
-         "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
-    }
+    is(val, gDeclaration[sinfo.domProp],
+       "consistency between decl.getPropertyValue('" + sproperty + "') and decl." + sinfo.domProp);
   }
   check_final(property);
   if ("subproperties" in info)
     for (var idx in info.subproperties)
       check_final(info.subproperties[idx]);
 }
 
 for (var prop in gCSSProperties)
