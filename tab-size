From: Geoff Lankow <geoff@darktrojan.net>

Bug 517882:  Implement a -moz-tab-size CSS property that specifies the number of spaces between tab stops in preformatted text.  r=roc, dbaron

diff --git a/dom/interfaces/css/nsIDOMNSCSS2Properties.idl b/dom/interfaces/css/nsIDOMNSCSS2Properties.idl
--- a/dom/interfaces/css/nsIDOMNSCSS2Properties.idl
+++ b/dom/interfaces/css/nsIDOMNSCSS2Properties.idl
@@ -35,17 +35,17 @@
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsIDOMCSS2Properties.idl"
 
-[scriptable, uuid(8C31E4A6-8F3A-4BB9-B180-8385AC2A4080)]
+[scriptable, uuid(cc0a6325-770b-476d-8cb8-c2a02a43c348)]
 interface nsIDOMNSCSS2Properties : nsIDOMCSS2Properties
 {
            /* Non-DOM 2 extensions */
 
            /* Mozilla extension CSS properties */
            attribute DOMString        MozAppearance;
                                         // raises(DOMException) on setting
 
@@ -273,9 +273,12 @@ interface nsIDOMNSCSS2Properties : nsIDO
            attribute DOMString        MozTransitionTimingFunction;
                                         // raises(DOMException) on setting
 
            attribute DOMString        MozTransition;
                                         // raises(DOMException) on setting
 
            attribute DOMString        pointerEvents;
                                         // raises(DOMException) on setting
+
+           attribute DOMString        MozTabSize;
+                                        // raises(DOMException) on setting
 };
diff --git a/layout/base/nsStyleConsts.h b/layout/base/nsStyleConsts.h
--- a/layout/base/nsStyleConsts.h
+++ b/layout/base/nsStyleConsts.h
@@ -653,16 +653,19 @@
 #define NS_STYLE_VERTICAL_ALIGN_MIDDLE_WITH_BASELINE 19
 
 // See nsStyleDisplay
 #define NS_STYLE_VISIBILITY_HIDDEN              0
 #define NS_STYLE_VISIBILITY_VISIBLE             1
 #define NS_STYLE_VISIBILITY_COLLAPSE            2
 
 // See nsStyleText
+#define NS_STYLE_TABSIZE_INITIAL                8
+
+// See nsStyleText
 #define NS_STYLE_WHITESPACE_NORMAL              0
 #define NS_STYLE_WHITESPACE_PRE                 1
 #define NS_STYLE_WHITESPACE_NOWRAP              2
 #define NS_STYLE_WHITESPACE_PRE_WRAP            3
 #define NS_STYLE_WHITESPACE_PRE_LINE            4
 
 // See nsStyleText
 #define NS_STYLE_WORDWRAP_NORMAL                0
diff --git a/layout/generic/nsTextFrameThebes.cpp b/layout/generic/nsTextFrameThebes.cpp
--- a/layout/generic/nsTextFrameThebes.cpp
+++ b/layout/generic/nsTextFrameThebes.cpp
@@ -2429,16 +2429,20 @@ PropertyProvider::GetSpacingInternal(PRU
           FindClusterEnd(mTextRun, run.GetOriginalOffset() + run.GetRunLength(),
                          &iter);
           aSpacing[iter.GetSkippedOffset() - aStart].mAfter += mWordSpacing;
         }
       }
     }
   }
 
+  // Ignore tab spacing rather than computing it, if the tab size is 0
+  if (!aIgnoreTabs)
+    aIgnoreTabs = mFrame->GetStyleText()->mTabSize == 0;
+
   // Now add tab spacing, if there is any
   if (!aIgnoreTabs) {
     gfxFloat* tabs = GetTabWidths(aStart, aLength);
     if (tabs) {
       for (index = 0; index < aLength; ++index) {
         aSpacing[index].mAfter += tabs[index];
       }
     }
@@ -2480,34 +2484,37 @@ PropertyProvider::GetSpacingInternal(PRU
 
 static void TabWidthDestructor(void* aObject, nsIAtom* aProp, void* aValue,
                                void* aData)
 {
   delete static_cast<nsTArray<gfxFloat>*>(aValue);
 }
 
 static gfxFloat
-ComputeTabWidthAppUnits(nsIFrame* aLineContainer, gfxTextRun* aTextRun)
-{
+ComputeTabWidthAppUnits(nsIFrame* aFrame, gfxTextRun* aTextRun)
+{
+  // Get the number of spaces from CSS -moz-tab-size
+  const nsStyleText* textStyle = aFrame->GetStyleText();
+  
   // Round the space width when converting to appunits the same way
   // textruns do
   gfxFloat spaceWidthAppUnits =
     NS_roundf(GetFirstFontMetrics(
-                GetFontGroupForFrame(aLineContainer)).spaceWidth *
+                GetFontGroupForFrame(aFrame)).spaceWidth *
               aTextRun->GetAppUnitsPerDevUnit());
-  return 8*spaceWidthAppUnits;
+  return textStyle->mTabSize * spaceWidthAppUnits;
 }
 
 // aX and the result are in whole appunits.
 static gfxFloat
-AdvanceToNextTab(gfxFloat aX, nsIFrame* aLineContainer,
+AdvanceToNextTab(gfxFloat aX, nsIFrame* aFrame,
                  gfxTextRun* aTextRun, gfxFloat* aCachedTabWidth)
 {
   if (*aCachedTabWidth < 0) {
-    *aCachedTabWidth = ComputeTabWidthAppUnits(aLineContainer, aTextRun);
+    *aCachedTabWidth = ComputeTabWidthAppUnits(aFrame, aTextRun);
   }
 
   // Advance aX to the next multiple of *aCachedTabWidth. We must advance
   // by at least 1 appunit.
   // XXX should we make this 1 CSS pixel?
   return NS_ceil((aX + 1)/(*aCachedTabWidth))*(*aCachedTabWidth);
 }
 
@@ -2565,17 +2572,17 @@ PropertyProvider::GetTabWidths(PRUint32 
                  !mTextRun->IsClusterStart(clusterEnd)) {
             ++clusterEnd;
           }
           mOffsetFromBlockOriginForTabs +=
             mTextRun->GetAdvanceWidth(i, clusterEnd - i, nsnull);
         }
       } else {
         double nextTab = AdvanceToNextTab(mOffsetFromBlockOriginForTabs,
-                mLineContainer, mTextRun, &tabWidth);
+                mFrame, mTextRun, &tabWidth);
         (*mTabWidths)[i - startOffset] = nextTab - mOffsetFromBlockOriginForTabs;
         mOffsetFromBlockOriginForTabs = nextTab;
       }
 
       mOffsetFromBlockOriginForTabs += spacing.mAfter;
     }
   }
 
@@ -5685,17 +5692,17 @@ nsTextFrame::AddInlineMinWidthForFlow(ns
       }
     }
 
     if (preformattedTab) {
       PropertyProvider::Spacing spacing;
       provider.GetSpacing(i, 1, &spacing);
       aData->currentLine += nscoord(spacing.mBefore);
       gfxFloat afterTab =
-        AdvanceToNextTab(aData->currentLine, FindLineContainer(this),
+        AdvanceToNextTab(aData->currentLine, this,
                          mTextRun, &tabWidth);
       aData->currentLine = nscoord(afterTab + spacing.mAfter);
       wordStart = i + 1;
     } else if (i < flowEndInTextRun ||
         (i == mTextRun->GetLength() &&
          (mTextRun->GetFlags() & nsTextFrameUtils::TEXT_HAS_TRAILING_BREAK))) {
       if (preformattedNewline) {
         aData->ForceBreak(aRenderingContext);
@@ -5815,17 +5822,17 @@ nsTextFrame::AddInlinePrefWidthForFlow(n
       }
     }
 
     if (preformattedTab) {
       PropertyProvider::Spacing spacing;
       provider.GetSpacing(i, 1, &spacing);
       aData->currentLine += nscoord(spacing.mBefore);
       gfxFloat afterTab =
-        AdvanceToNextTab(aData->currentLine, FindLineContainer(this),
+        AdvanceToNextTab(aData->currentLine, this,
                          mTextRun, &tabWidth);
       aData->currentLine = nscoord(afterTab + spacing.mAfter);
       lineStart = i + 1;
     } else if (preformattedNewline) {
       aData->ForceBreak(aRenderingContext);
       lineStart = i;
     }
   }
diff --git a/layout/reftests/reftest.list b/layout/reftests/reftest.list
--- a/layout/reftests/reftest.list
+++ b/layout/reftests/reftest.list
@@ -139,16 +139,19 @@ include pagination/reftest.list
 include selection/reftest.list
 
 # svg/
 include svg/reftest.list
 
 # svg-integration/
 include svg-integration/reftest.list
 
+# tab-size/
+include tab-size/reftest.list
+
 # table-anonymous-boxes/
 include table-anonymous-boxes/reftest.list
 
 # table-background/
 include table-background/reftest.list
 
 # table-bordercollapse/
 include table-bordercollapse/reftest.list
diff --git a/layout/reftests/tab-size/reftest.list b/layout/reftests/tab-size/reftest.list
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/reftest.list
@@ -0,0 +1,9 @@
+== tab-size-8.html            tab-size-initial.html
+== tab-size-8.html            spaces-8.html
+== tab-size-4.html            spaces-4.html
+== tab-size-4-span.html       spaces-4.html
+== tab-size-4-spanoffset.html spaces-4-offset.html
+== tab-size-4-multiple.html   spaces-4-multiple.html
+== tab-size-1.html            spaces-1.html
+== tab-size-0.html            spaces-0.html
+== tab-size-negative.html     tab-size-initial.html
diff --git a/layout/reftests/tab-size/spaces-0.html b/layout/reftests/tab-size/spaces-0.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-0.html
@@ -0,0 +1,1 @@
+<pre>AX</pre>
diff --git a/layout/reftests/tab-size/spaces-1.html b/layout/reftests/tab-size/spaces-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-1.html
@@ -0,0 +1,1 @@
+<pre>A X</pre>
diff --git a/layout/reftests/tab-size/spaces-4-multiple.html b/layout/reftests/tab-size/spaces-4-multiple.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-4-multiple.html
@@ -0,0 +1,1 @@
+<pre>A   XYZ MNO</pre>
diff --git a/layout/reftests/tab-size/spaces-4-offset.html b/layout/reftests/tab-size/spaces-4-offset.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-4-offset.html
@@ -0,0 +1,6 @@
+<pre>123456B Z
+1234567B    Z
+12345678B   Z
+123456789B  Z
+1234567890B Z
+12345678901B    Z</pre>
diff --git a/layout/reftests/tab-size/spaces-4.html b/layout/reftests/tab-size/spaces-4.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-4.html
@@ -0,0 +1,1 @@
+<pre>A   X</pre>
diff --git a/layout/reftests/tab-size/spaces-8.html b/layout/reftests/tab-size/spaces-8.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/spaces-8.html
@@ -0,0 +1,1 @@
+<pre>A       X</pre>
diff --git a/layout/reftests/tab-size/tab-size-0.html b/layout/reftests/tab-size/tab-size-0.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-0.html
@@ -0,0 +1,2 @@
+<!-- this test will never insert a space -->
+<pre style="-moz-tab-size: 0">A&#9;X</pre>
diff --git a/layout/reftests/tab-size/tab-size-1.html b/layout/reftests/tab-size/tab-size-1.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-1.html
@@ -0,0 +1,2 @@
+<!-- this test will always insert a space -->
+<pre style="-moz-tab-size: 1">A&#9;X</pre>
diff --git a/layout/reftests/tab-size/tab-size-4-multiple.html b/layout/reftests/tab-size/tab-size-4-multiple.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-4-multiple.html
@@ -0,0 +1,1 @@
+<pre style="-moz-tab-size: 4">A&#9;XYZ&#9;MNO</pre>
diff --git a/layout/reftests/tab-size/tab-size-4-span.html b/layout/reftests/tab-size/tab-size-4-span.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-4-span.html
@@ -0,0 +1,1 @@
+<pre><span style="-moz-tab-size: 4">A&#9;X</span></pre>
diff --git a/layout/reftests/tab-size/tab-size-4-spanoffset.html b/layout/reftests/tab-size/tab-size-4-spanoffset.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-4-spanoffset.html
@@ -0,0 +1,6 @@
+<pre>123456<span style="-moz-tab-size: 4">B&#9;Z</span>
+1234567<span style="-moz-tab-size: 4">B&#9;Z</span>
+12345678<span style="-moz-tab-size: 4">B&#9;Z</span>
+123456789<span style="-moz-tab-size: 4">B&#9;Z</span>
+1234567890<span style="-moz-tab-size: 4">B&#9;Z</span>
+12345678901<span style="-moz-tab-size: 4">B&#9;Z</span></pre>
diff --git a/layout/reftests/tab-size/tab-size-4.html b/layout/reftests/tab-size/tab-size-4.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-4.html
@@ -0,0 +1,1 @@
+<pre style="-moz-tab-size: 4">A&#9;X</pre>
diff --git a/layout/reftests/tab-size/tab-size-8.html b/layout/reftests/tab-size/tab-size-8.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-8.html
@@ -0,0 +1,1 @@
+<pre style="-moz-tab-size: 8">A&#9;X</pre>
diff --git a/layout/reftests/tab-size/tab-size-initial.html b/layout/reftests/tab-size/tab-size-initial.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-initial.html
@@ -0,0 +1,1 @@
+<pre>A&#9;X</pre>
diff --git a/layout/reftests/tab-size/tab-size-negative.html b/layout/reftests/tab-size/tab-size-negative.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/tab-size/tab-size-negative.html
@@ -0,0 +1,1 @@
+<pre style="-moz-tab-size: -4">A&#9;X</pre>
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -5939,16 +5939,18 @@ CSSParserImpl::ParseSingleValueProperty(
   case eCSSProperty_font_variant:
     return ParseVariant(aValue, VARIANT_HMK | VARIANT_SYSFONT,
                         nsCSSProps::kFontVariantKTable);
   case eCSSProperty_font_weight:
     return ParseFontWeight(aValue);
   case eCSSProperty_ime_mode:
     return ParseVariant(aValue, VARIANT_AHK | VARIANT_NORMAL,
                         nsCSSProps::kIMEModeKTable);
+  case eCSSProperty__moz_tab_size:
+    return ParseNonNegativeVariant(aValue, VARIANT_HI, nsnull);
   case eCSSProperty_letter_spacing:
   case eCSSProperty_word_spacing:
     return ParseVariant(aValue, VARIANT_HL | VARIANT_NORMAL, nsnull);
   case eCSSProperty_line_height:
     return ParseNonNegativeVariant(aValue, VARIANT_HLPN | VARIANT_KEYWORD | VARIANT_NORMAL | VARIANT_SYSFONT, nsCSSProps::kLineHeightKTable);
   case eCSSProperty_list_style_image:
     return ParseVariant(aValue, VARIANT_HUO, nsnull);
   case eCSSProperty_list_style_position:
diff --git a/layout/style/nsCSSPropList.h b/layout/style/nsCSSPropList.h
--- a/layout/style/nsCSSPropList.h
+++ b/layout/style/nsCSSPropList.h
@@ -394,16 +394,27 @@ CSS_PROP_OUTLINE(
     MozOutlineRadiusBottomleft,
     0,
     Margin,
     mOutlineRadius.mBottomLeft,
     eCSSType_ValuePair,
     nsnull,
     CSS_PROP_NO_OFFSET,
     eStyleAnimType_None)
+CSS_PROP_TEXT(
+    -moz-tab-size,
+    _moz_tab_size,
+    MozTabSize,
+    0,
+    Text,
+    mTabSize,
+    eCSSType_Value,
+    nsnull,
+    offsetof(nsStyleText, mTabSize),
+    eStyleAnimType_None)
 #ifndef CSS_PROP_LIST_EXCLUDE_INTERNAL
 CSS_PROP_FONT(
     -x-system-font,
     _x_system_font,
     X,
     CSS_PROPERTY_APPLIES_TO_FIRST_LETTER_AND_FIRST_LINE,
     Font,
     mSystemFont,
diff --git a/layout/style/nsCSSStruct.h b/layout/style/nsCSSStruct.h
--- a/layout/style/nsCSSStruct.h
+++ b/layout/style/nsCSSStruct.h
@@ -330,16 +330,17 @@ struct nsRuleDataColor : public nsCSSCol
 private:
   nsRuleDataColor(const nsRuleDataColor& aOther); // NOT IMPLEMENTED
 };
 
 struct nsCSSText : public nsCSSStruct  {
   nsCSSText(void);
   ~nsCSSText(void);
 
+  nsCSSValue mTabSize;
   nsCSSValue mWordSpacing;
   nsCSSValue mLetterSpacing;
   nsCSSValue mVerticalAlign;
   nsCSSValue mTextTransform;
   nsCSSValue mTextAlign;
   nsCSSValue mTextIndent;
   nsCSSValue mDecoration;
   nsCSSValueList* mTextShadow; // NEW
diff --git a/layout/style/nsComputedDOMStyle.cpp b/layout/style/nsComputedDOMStyle.cpp
--- a/layout/style/nsComputedDOMStyle.cpp
+++ b/layout/style/nsComputedDOMStyle.cpp
@@ -2549,16 +2549,27 @@ nsComputedDOMStyle::GetTextTransform(nsI
   } else {
     val->SetIdent(eCSSKeyword_none);
   }
 
   return CallQueryInterface(val, aValue);
 }
 
 nsresult
+nsComputedDOMStyle::GetMozTabSize(nsIDOMCSSValue** aValue)
+{
+  nsROCSSPrimitiveValue* val = GetROCSSPrimitiveValue();
+  NS_ENSURE_TRUE(val, NS_ERROR_OUT_OF_MEMORY);
+
+  val->SetNumber(GetStyleText()->mTabSize);
+    
+  return CallQueryInterface(val, aValue);
+}
+
+nsresult
 nsComputedDOMStyle::GetLetterSpacing(nsIDOMCSSValue** aValue)
 {
   nsROCSSPrimitiveValue *val = GetROCSSPrimitiveValue();
   NS_ENSURE_TRUE(val, NS_ERROR_OUT_OF_MEMORY);
 
   SetValueToCoord(val, GetStyleText()->mLetterSpacing);
 
   return CallQueryInterface(val, aValue);
@@ -4733,16 +4744,17 @@ nsComputedDOMStyle::GetQueryableProperty
     COMPUTED_STYLE_MAP_ENTRY(float_edge,                    FloatEdge),
     COMPUTED_STYLE_MAP_ENTRY(force_broken_image_icon,  ForceBrokenImageIcon),
     COMPUTED_STYLE_MAP_ENTRY(image_region,                  ImageRegion),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_outline_radius_bottomLeft, OutlineRadiusBottomLeft),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_outline_radius_bottomRight,OutlineRadiusBottomRight),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_outline_radius_topLeft,    OutlineRadiusTopLeft),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_outline_radius_topRight,   OutlineRadiusTopRight),
     COMPUTED_STYLE_MAP_ENTRY(stack_sizing,                  StackSizing),
+    COMPUTED_STYLE_MAP_ENTRY(_moz_tab_size,                 MozTabSize),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_transform,         MozTransform),
     COMPUTED_STYLE_MAP_ENTRY_LAYOUT(_moz_transform_origin,  MozTransformOrigin),
     COMPUTED_STYLE_MAP_ENTRY(user_focus,                    UserFocus),
     COMPUTED_STYLE_MAP_ENTRY(user_input,                    UserInput),
     COMPUTED_STYLE_MAP_ENTRY(user_modify,                   UserModify),
     COMPUTED_STYLE_MAP_ENTRY(user_select,                   UserSelect),
     COMPUTED_STYLE_MAP_ENTRY(transition_delay,              TransitionDelay),
     COMPUTED_STYLE_MAP_ENTRY(transition_duration,           TransitionDuration),
diff --git a/layout/style/nsComputedDOMStyle.h b/layout/style/nsComputedDOMStyle.h
--- a/layout/style/nsComputedDOMStyle.h
+++ b/layout/style/nsComputedDOMStyle.h
@@ -282,16 +282,17 @@ private:
   nsresult GetTextDecoration(nsIDOMCSSValue** aValue);
   nsresult GetTextIndent(nsIDOMCSSValue** aValue);
   nsresult GetTextTransform(nsIDOMCSSValue** aValue);
   nsresult GetTextShadow(nsIDOMCSSValue** aValue);
   nsresult GetLetterSpacing(nsIDOMCSSValue** aValue);
   nsresult GetWordSpacing(nsIDOMCSSValue** aValue);
   nsresult GetWhiteSpace(nsIDOMCSSValue** aValue);
   nsresult GetWordWrap(nsIDOMCSSValue** aValue);
+  nsresult GetMozTabSize(nsIDOMCSSValue** aValue);
 
   /* Visibility properties */
   nsresult GetOpacity(nsIDOMCSSValue** aValue);
   nsresult GetPointerEvents(nsIDOMCSSValue** aValue);
   nsresult GetVisibility(nsIDOMCSSValue** aValue);
 
   /* Direction properties */
   nsresult GetDirection(nsIDOMCSSValue** aValue);
diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -3209,17 +3209,22 @@ nsRuleNode::ComputeTextData(void* aStart
                             const nsRuleDataStruct& aData, 
                             nsStyleContext* aContext, 
                             nsRuleNode* aHighestNode,
                             const RuleDetail aRuleDetail,
                             const PRBool aCanStoreInRuleTree)
 {
   COMPUTE_START_INHERITED(Text, (), text, parentText, Text, textData)
 
-    // letter-spacing: normal, length, inherit
+  // tab-size: integer, inherit
+  SetDiscrete(textData.mTabSize, text->mTabSize, canStoreInRuleTree,
+              SETDSC_INTEGER, parentText->mTabSize,
+              NS_STYLE_TABSIZE_INITIAL, 0, 0, 0, 0);
+  
+  // letter-spacing: normal, length, inherit
   SetCoord(textData.mLetterSpacing, text->mLetterSpacing, parentText->mLetterSpacing,
            SETCOORD_LH | SETCOORD_NORMAL | SETCOORD_INITIAL_NORMAL,
            aContext, mPresContext, canStoreInRuleTree);
 
   // text-shadow: none, list, inherit, initial
   nsCSSValueList* list = textData.mTextShadow;
   if (list) {
     text->mTextShadow = nsnull;
diff --git a/layout/style/nsStyleStruct.cpp b/layout/style/nsStyleStruct.cpp
--- a/layout/style/nsStyleStruct.cpp
+++ b/layout/style/nsStyleStruct.cpp
@@ -2342,28 +2342,30 @@ nsStyleText::nsStyleText(void)
   mWordWrap = NS_STYLE_WORDWRAP_NORMAL;
 
   mLetterSpacing.SetNormalValue();
   mLineHeight.SetNormalValue();
   mTextIndent.SetCoordValue(0);
   mWordSpacing = 0;
 
   mTextShadow = nsnull;
+  mTabSize = NS_STYLE_TABSIZE_INITIAL;
 }
 
 nsStyleText::nsStyleText(const nsStyleText& aSource)
   : mTextAlign(aSource.mTextAlign),
     mTextTransform(aSource.mTextTransform),
     mWhiteSpace(aSource.mWhiteSpace),
     mWordWrap(aSource.mWordWrap),
     mLetterSpacing(aSource.mLetterSpacing),
     mLineHeight(aSource.mLineHeight),
     mTextIndent(aSource.mTextIndent),
     mWordSpacing(aSource.mWordSpacing),
-    mTextShadow(aSource.mTextShadow)
+    mTextShadow(aSource.mTextShadow),
+    mTabSize(aSource.mTabSize)
 {
   MOZ_COUNT_CTOR(nsStyleText);
 }
 
 nsStyleText::~nsStyleText(void)
 {
   MOZ_COUNT_DTOR(nsStyleText);
 }
@@ -2377,17 +2379,18 @@ nsChangeHint nsStyleText::CalcDifference
 
   if ((mTextAlign != aOther.mTextAlign) ||
       (mTextTransform != aOther.mTextTransform) ||
       (mWhiteSpace != aOther.mWhiteSpace) ||
       (mWordWrap != aOther.mWordWrap) ||
       (mLetterSpacing != aOther.mLetterSpacing) ||
       (mLineHeight != aOther.mLineHeight) ||
       (mTextIndent != aOther.mTextIndent) ||
-      (mWordSpacing != aOther.mWordSpacing))
+      (mWordSpacing != aOther.mWordSpacing) ||
+      (mTabSize != aOther.mTabSize))
     return NS_STYLE_HINT_REFLOW;
 
   return CalcShadowDifference(mTextShadow, aOther.mTextShadow);
 }
 
 #ifdef DEBUG
 /* static */
 nsChangeHint nsStyleText::MaxDifference()
diff --git a/layout/style/nsStyleStruct.h b/layout/style/nsStyleStruct.h
--- a/layout/style/nsStyleStruct.h
+++ b/layout/style/nsStyleStruct.h
@@ -1061,16 +1061,17 @@ struct nsStyleText {
 #ifdef DEBUG
   static nsChangeHint MaxDifference();
 #endif
 
   PRUint8 mTextAlign;                   // [inherited] see nsStyleConsts.h
   PRUint8 mTextTransform;               // [inherited] see nsStyleConsts.h
   PRUint8 mWhiteSpace;                  // [inherited] see nsStyleConsts.h
   PRUint8 mWordWrap;                    // [inherited] see nsStyleConsts.h
+  PRInt32 mTabSize;                     // [inherited] see nsStyleConsts.h
 
   nsStyleCoord  mLetterSpacing;         // [inherited] coord, normal
   nsStyleCoord  mLineHeight;            // [inherited] coord, factor, normal
   nsStyleCoord  mTextIndent;            // [inherited] coord, percent
   nscoord mWordSpacing;                 // [inherited]
 
   nsRefPtr<nsCSSShadowArray> mTextShadow; // [inherited] NULL in case of a zero-length
   
diff --git a/layout/style/test/property_database.js b/layout/style/test/property_database.js
--- a/layout/style/test/property_database.js
+++ b/layout/style/test/property_database.js
@@ -530,16 +530,24 @@ var gCSSProperties = {
 		inherited: false,
 		type: CSS_TYPE_SHORTHAND_AND_LONGHAND,
 		get_computed: logical_box_prop_get_computed,
 		/* no subproperties */
 		initial_values: [ "0", "0px", "0%", "0em", "0ex" ],
 		other_values: [ "1px", "3em" ],
 		invalid_values: []
 	},
+	"-moz-tab-size": {
+		domProp: "MozTabSize",
+		inherited: true,
+		type: CSS_TYPE_LONGHAND,
+		initial_values: [ "8" ],
+		other_values: [ "0", "3", "99", "12000" ],
+		invalid_values: [ "-1", "-808", "3.0", "17.5" ]
+	},
 	"-moz-transform": {
 		domProp: "MozTransform",
 		inherited: false,
 		type: CSS_TYPE_LONGHAND,
 		initial_values: [ "none" ],
 		other_values: [ "translatex(1px)", "translatex(4em)", "translatex(-4px)", "translatex(3px)", "translatex(0px) translatex(1px) translatex(2px) translatex(3px) translatex(4px)", "translatey(4em)", "translate(3px)", "translate(10px, -3px)", "rotate(45deg)", "rotate(45grad)", "rotate(45rad)", "rotate(0)", "scalex(10)", "scaley(10)", "scale(10)", "scale(10, 20)", "skewx(30deg)", "skewx(0)", "skewy(0)", "skewx(30grad)", "skewx(30rad)", "skewy(30deg)", "skewy(30grad)", "skewy(30rad)", "matrix(1, 2, 3, 4, 5px, 6em)", "rotate(45deg) scale(2, 1)", "skewx(45deg) skewx(-50grad)", "translate(0, 0) scale(1, 1) skewx(0) skewy(0) matrix(1, 0, 0, 1, 0, 0)", "translatex(50%)", "translatey(50%)", "translate(50%)", "translate(3%, 5px)", "translate(5px, 3%)", "matrix(1, 2, 3, 4, 5px, 6%)", "matrix(1, 2, 3, 4, 5%, 6px)", "matrix(1, 2, 3, 4, 5%, 6%)"],
 		invalid_values: ["1px", "#0000ff", "red", "auto", "translatex(1px 1px)", "translatex(translatex(1px))", "translatex(#0000ff)", "translatex(red)", "translatey()", "matrix(1, 2, 3, 4, 5, 6)", "matrix(1px, 2px, 3px, 4px, 5px, 6px)", "scale(150%)", "skewx(red)", "matrix(1%, 0, 0, 0, 0px, 0px)", "matrix(0, 1%, 2, 3, 4px,5px)", "matrix(0, 1, 2%, 3, 4px, 5px)", "matrix(0, 1, 2, 3%, 4%, 5%)"]
 	},
