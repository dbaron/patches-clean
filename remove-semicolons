From: L. David Baron <dbaron@dbaron.org>

Remove extra trailing semicolons after functions defined inline within classes.  (Bug 504654)

diff --git a/browser/components/shell/src/nsMacShellService.h b/browser/components/shell/src/nsMacShellService.h
--- a/browser/components/shell/src/nsMacShellService.h
+++ b/browser/components/shell/src/nsMacShellService.h
@@ -42,18 +42,18 @@
 #include "nsIWebProgressListener.h"
 #include "nsILocalFile.h"
 #include "nsCOMPtr.h"
 
 class nsMacShellService : public nsIMacShellService,
                           public nsIWebProgressListener
 {
 public:
-  nsMacShellService() : mCheckedThisSession(PR_FALSE) {};
-  virtual ~nsMacShellService() {};
+  nsMacShellService() : mCheckedThisSession(PR_FALSE) {}
+  virtual ~nsMacShellService() {}
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSISHELLSERVICE
   NS_DECL_NSIMACSHELLSERVICE
   NS_DECL_NSIWEBPROGRESSLISTENER
 
 protected:
 
diff --git a/browser/components/shell/src/nsWindowsShellService.h b/browser/components/shell/src/nsWindowsShellService.h
--- a/browser/components/shell/src/nsWindowsShellService.h
+++ b/browser/components/shell/src/nsWindowsShellService.h
@@ -49,17 +49,17 @@
 #ifndef WINCE
 class nsWindowsShellService : public nsIWindowsShellService
 #else
 class nsWindowsShellService : public nsIShellService
 #endif
 {
 public:
   nsWindowsShellService() : mCheckedThisSession(PR_FALSE) {}; 
-  virtual ~nsWindowsShellService() {};
+  virtual ~nsWindowsShellService() {}
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSISHELLSERVICE
 #ifndef WINCE
   NS_DECL_NSIWINDOWSSHELLSERVICE
 #endif
 
 protected:
diff --git a/content/base/src/nsNodeIterator.h b/content/base/src/nsNodeIterator.h
--- a/content/base/src/nsNodeIterator.h
+++ b/content/base/src/nsNodeIterator.h
@@ -69,17 +69,17 @@ public:
 
     NS_DECL_NSIMUTATIONOBSERVER_CONTENTINSERTED
     NS_DECL_NSIMUTATIONOBSERVER_CONTENTREMOVED
 
     NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS(nsNodeIterator, nsIDOMNodeIterator)
 
 private:
     struct NodePointer {
-        NodePointer() : mNode(nsnull) {};
+        NodePointer() : mNode(nsnull) {}
         NodePointer(nsINode *aNode, PRBool aBeforeNode);
 
         PRBool MoveToNext(nsINode *aRoot);
         PRBool MoveToPrevious(nsINode *aRoot);
 
         PRBool MoveForward(nsINode *aRoot, nsINode *aParent, PRInt32 aChildNum);
         void MoveBackward(nsINode *aParent, PRInt32 aChildNum);
 
diff --git a/content/base/src/nsXMLContentSerializer.h b/content/base/src/nsXMLContentSerializer.h
--- a/content/base/src/nsXMLContentSerializer.h
+++ b/content/base/src/nsXMLContentSerializer.h
@@ -270,17 +270,17 @@ class nsXMLContentSerializer : public ns
 
   /**
    * This method can be redefine to serialize additional things just after
    * after the serialization ot the start tag.
    * (called at the end of AppendElementStart)
    */
   virtual void AfterElementStart(nsIContent * aContent,
                                  nsIDOMElement *aOriginalElement,
-                                 nsAString& aStr) { };
+                                 nsAString& aStr) { }
 
   /**
    * This method can be redefined to check if the element can be serialized.
    * It is called when the serialization of the end tag is asked 
    * (AppendElementEnd)
    * In this method you can also force the formating
    * by setting aForceFormat to PR_TRUE.
    * @return boolean  PR_TRUE if the element can be output
@@ -290,17 +290,17 @@ class nsXMLContentSerializer : public ns
                                  nsAString& aStr);
 
   /**
    * This method can be redefine to serialize additional things just after
    * after the serialization ot the end tag.
    * (called at the end of AppendElementStart)
    */
   virtual void AfterElementEnd(nsIContent * aContent,
-                               nsAString& aStr) { };
+                               nsAString& aStr) { }
 
   /**
    * Returns PR_TRUE if a line break should be inserted before an element open tag
    */
   virtual PRBool LineBreakBeforeOpen(PRInt32 aNamespaceID, nsIAtom* aName);
 
   /**
    * Returns PR_TRUE if a line break should be inserted after an element open tag
diff --git a/content/canvas/src/nsCanvasRenderingContextGL.h b/content/canvas/src/nsCanvasRenderingContextGL.h
--- a/content/canvas/src/nsCanvasRenderingContextGL.h
+++ b/content/canvas/src/nsCanvasRenderingContextGL.h
@@ -121,17 +121,17 @@ public:
     // nsICanvasRenderingContextInternal
     NS_IMETHOD SetCanvasElement(nsICanvasElement* aParentCanvas);
     NS_IMETHOD SetDimensions(PRInt32 width, PRInt32 height);
     NS_IMETHOD Render(gfxContext *ctx, gfxPattern::GraphicsFilter f);
     NS_IMETHOD GetInputStream(const char* aMimeType,
                               const PRUnichar* aEncoderOptions,
                               nsIInputStream **aStream);
     NS_IMETHOD GetThebesSurface(gfxASurface **surface);
-    NS_IMETHOD SetIsOpaque(PRBool b) { return NS_OK; };
+    NS_IMETHOD SetIsOpaque(PRBool b) { return NS_OK; }
 
 protected:
     PRBool SafeToCreateCanvas3DContext(nsICanvasElement *canvasElement);
     nsresult DoSwapBuffers();
 
     // thebes helpers
     nsresult ImageSurfaceFromElement(nsIDOMElement *imgElt,
                                      gfxImageSurface **aSurface,
diff --git a/content/smil/nsISMILAttr.h b/content/smil/nsISMILAttr.h
--- a/content/smil/nsISMILAttr.h
+++ b/content/smil/nsISMILAttr.h
@@ -93,12 +93,12 @@ public:
    * @param aValue  The value to set.
    * @return NS_OK on success or an error code if setting failed.
    */
   virtual nsresult SetAnimValue(const nsSMILValue& aValue) = 0;
 
   /**
    * Virtual destructor, to make sure subclasses can clean themselves up.
    */
-  virtual ~nsISMILAttr() {};
+  virtual ~nsISMILAttr() {}
 };
 
 #endif // NS_ISMILATTR_H_
diff --git a/content/smil/nsISMILType.h b/content/smil/nsISMILType.h
--- a/content/smil/nsISMILType.h
+++ b/content/smil/nsISMILType.h
@@ -210,12 +210,12 @@ public:
                                const nsSMILValue& aEndVal,
                                double aUnitDistance,
                                nsSMILValue& aResult) const = 0;
 
   /*
    * Virtual destructor: Nothing to do here, but subclasses
    * may need it.
    */
-  virtual ~nsISMILType() {};
+  virtual ~nsISMILType() {}
 };
 
 #endif // NS_ISMILTYPE_H_
diff --git a/content/xslt/src/base/txErrorObserver.h b/content/xslt/src/base/txErrorObserver.h
--- a/content/xslt/src/base/txErrorObserver.h
+++ b/content/xslt/src/base/txErrorObserver.h
@@ -49,17 +49,17 @@
 **/
 class ErrorObserver {
 
 public:
 
     /**
      * Default Destructor for ErrorObserver
     **/
-    virtual ~ErrorObserver() {};
+    virtual ~ErrorObserver() {}
 
     /**
      *  Notifies this Error observer of a new error aRes
     **/
     virtual void receiveError(const nsAString& errorMessage, nsresult aRes) = 0;
 
     /**
      *  Notifies this Error observer of a new error, with default
diff --git a/db/mork/build/nsMorkFactory.cpp b/db/mork/build/nsMorkFactory.cpp
--- a/db/mork/build/nsMorkFactory.cpp
+++ b/db/mork/build/nsMorkFactory.cpp
@@ -42,17 +42,17 @@
 #include "nsIGenericFactory.h"
 #include "nsMorkCID.h"
 #include "nsIMdbFactoryFactory.h"
 #include "mdb.h"
 
 class nsMorkFactoryService : public nsIMdbFactoryService
 {
 public:
-  nsMorkFactoryService() {};
+  nsMorkFactoryService() {}
   // nsISupports methods
   NS_DECL_ISUPPORTS 
 
   NS_IMETHOD GetMdbFactory(nsIMdbFactory **aFactory);
 
 protected:
   nsCOMPtr<nsIMdbFactory> mMdbFactory;
 };
diff --git a/dom/src/geolocation/WinMobileLocationProvider.cpp b/dom/src/geolocation/WinMobileLocationProvider.cpp
--- a/dom/src/geolocation/WinMobileLocationProvider.cpp
+++ b/dom/src/geolocation/WinMobileLocationProvider.cpp
@@ -59,17 +59,17 @@ public:
   
   nsGeoPositionCoords(double aLat, double aLong,
                       double aAlt, double aHError,
                       double aVError, double aHeading,
                       double aSpeed) :
     mLat(aLat), mLong(aLong),
     mAlt(aAlt), mHError(aHError),
     mVError(aVError), mHeading(aHeading),
-    mSpeed(aSpeed) {};
+    mSpeed(aSpeed) {}
 private:
   ~nsGeoPositionCoords() {}
   double mLat, mLong, mAlt, mHError, mVError, mHeading, mSpeed;
 };
 
 NS_INTERFACE_MAP_BEGIN(nsGeoPositionCoords)
 NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMGeoPositionCoords)
 NS_INTERFACE_MAP_ENTRY(nsIDOMGeoPositionCoords)
diff --git a/embedding/browser/activex/src/plugin/LegacyPlugin.cpp b/embedding/browser/activex/src/plugin/LegacyPlugin.cpp
--- a/embedding/browser/activex/src/plugin/LegacyPlugin.cpp
+++ b/embedding/browser/activex/src/plugin/LegacyPlugin.cpp
@@ -317,17 +317,17 @@ CreatePrincipal(nsIURI * origin,
 
 class MozAxAutoPushJSContext
 {
 public:
     MozAxAutoPushJSContext(JSContext *cx, nsIURI * aURI);
 
     ~MozAxAutoPushJSContext();
 
-    nsresult ResultOfPush() { return mPushResult; };
+    nsresult ResultOfPush() { return mPushResult; }
 
 private:
     nsCOMPtr<nsIJSContextStack> mContextStack;
     JSContext*                  mContext;
     JSStackFrame                mFrame;
     nsresult                    mPushResult;
 };
 
diff --git a/embedding/wrappers/DotNETEmbed/DotNETWebBrowser.h b/embedding/wrappers/DotNETEmbed/DotNETWebBrowser.h
--- a/embedding/wrappers/DotNETEmbed/DotNETWebBrowser.h
+++ b/embedding/wrappers/DotNETEmbed/DotNETWebBrowser.h
@@ -68,35 +68,35 @@ namespace Mozilla
           Boolean mVisibility;
           String* mTitle;
 
         public:
           static const UInt32 DIM_FLAGS_POSITION = 1;
           static const UInt32 DIM_FLAGS_SIZE_INNER = 2;
           static const UInt32 DIM_FLAGS_SIZE_OUTER = 4;
 
-          __property Boolean get_Visibility() { return visibility; };
-          __property void set_Visibility(Boolean v) { visibility = v; };
+          __property Boolean get_Visibility() { return visibility; }
+          __property void set_Visibility(Boolean v) { visibility = v; }
           __property String* get_Title() { return title; };
           __property void set_Title(String * t) { title = t; };
 
-          void setDimensions(UInt32 aFlags, Int32 x, Int32 y, Int32 cx, Int32 cy) {};
+          void setDimensions(UInt32 aFlags, Int32 x, Int32 y, Int32 cx, Int32 cy) {}
           void getDimensions(UInt32 aFlags, Int32 *x, Int32 *y, Int32 *cx, Int32 *cy) {};
-          void setFocus() {};
+          void setFocus() {}
       }; // class EmbeddingSiteWindow
 
       public __gc class WebBrowserChrome
       {
         public:
-          bool setStatus() { return true; };
-          bool destroyBrowserWindow() { return true; };
-          bool sizeBrowserTo() { return true; };
-          bool showAsModal() { return true; };
-          bool isWindowModal() { return true; };
-          bool exitModalEventLoop() { return true; };
+          bool setStatus() { return true; }
+          bool destroyBrowserWindow() { return true; }
+          bool sizeBrowserTo() { return true; }
+          bool showAsModal() { return true; }
+          bool isWindowModal() { return true; }
+          bool exitModalEventLoop() { return true; }
       }; // class WebBrowserChrome
 
       public __gc class WebNavigation
       {
         public:
           static const UInt32 LOAD_FLAGS_MASK = 65535;
           static const UInt32 LOAD_FLAGS_NONE = 0;
           static const UInt32 LOAD_FLAGS_IS_REFRESH = 16;
@@ -105,46 +105,46 @@ namespace Mozilla
           static const UInt32 LOAD_FLAGS_REPLACE_HISTORY = 128;
           static const UInt32 LOAD_FLAGS_BYPASS_CACHE = 256;
           static const UInt32 LOAD_FLAGS_BYPASS_PROXY = 512;
           static const UInt32 LOAD_FLAGS_CHARSET_CHANGE = 1024;
           static const UInt32 STOP_NETWORK = 1;
           static const UInt32 STOP_CONTENT = 2;
           static const UInt32 STOP_ALL = 3;
 
-          void goBack() {};
-          void goForward() {};
-          void gotoIndex(Int32 arg0) {};
+          void goBack() {}
+          void goForward() {}
+          void gotoIndex(Int32 arg0) {}
           void loadURI(String *arg0, UInt32 arg1, URI *arg2, InputStream *arg3, InputStream *arg4) {}; 
-          void reload(UInt32 arg0) {};
-          void stop(UInt32 arg0) {};
+          void reload(UInt32 arg0) {}
+          void stop(UInt32 arg0) {}
       }; // class WebNavigation
 
       public __gc class WebBrowser
       {
         public:
-          bool addWebBrowserListener() { return true; };
-          bool removeWebBrowserListener() { return true; };
+          bool addWebBrowserListener() { return true; }
+          bool removeWebBrowserListener() { return true; }
           bool SetContainerWindow(WebBrowserChrome *aChrome) { return true; };
       }; // class WebBrowser
 
       public __gc class WindowWatcher
       {
         public:
-          bool openWindow() { return true; };
-          bool registerNotification() { return true; };
-          bool unregisterNotification() { return true; };
-          bool getWindowEnumerator() { return true; };
-          bool getNewPrompter() { return true; };
-          bool getNewAuthPrompter() { return true; };
-          bool setWindowCreator() { return true; };
+          bool openWindow() { return true; }
+          bool registerNotification() { return true; }
+          bool unregisterNotification() { return true; }
+          bool getWindowEnumerator() { return true; }
+          bool getNewPrompter() { return true; }
+          bool getNewAuthPrompter() { return true; }
+          bool setWindowCreator() { return true; }
       }; //class WindowWatcher
 
       public __gc class WindowCreator
       {
         public:
-          bool createChromeWindow() { return true; };
+          bool createChromeWindow() { return true; }
       }; //class WindowCreator
 
     } // namespace WebBrowser
 
   } // namespace Embedding
 }
diff --git a/embedding/wrappers/DotNETEmbed/DotNETXPCOM_IO.h b/embedding/wrappers/DotNETEmbed/DotNETXPCOM_IO.h
--- a/embedding/wrappers/DotNETEmbed/DotNETXPCOM_IO.h
+++ b/embedding/wrappers/DotNETEmbed/DotNETXPCOM_IO.h
@@ -55,16 +55,16 @@ using namespace System;
 namespace Mozilla
 {
   namespace Embedding
   {
     namespace XPCOM_IO
     {
       public __gc class InputStream
       {
-        bool Close(void) { return true; };
+        bool Close(void) { return true; }
         bool Available(int *_retval) { return true; };
         bool Read(String * aBuf, int aCount, int *_retval) { return true; };
         bool IsNonBlocking(bool *_retval) { return true; };
       }; // class InputStream
     }; // namespace XPCOM_IO
   } // namespace Embedding
 }
diff --git a/extensions/universalchardet/src/base/JpCntx.h b/extensions/universalchardet/src/base/JpCntx.h
--- a/extensions/universalchardet/src/base/JpCntx.h
+++ b/extensions/universalchardet/src/base/JpCntx.h
@@ -98,17 +98,17 @@ protected:
 
   //If this flag is set to PR_TRUE, detection is done and conclusion has been made
   PRBool   mDone;
 };
 
 
 class SJISContextAnalysis : public JapaneseContextAnalysis
 {
-  //SJISContextAnalysis(){};
+  //SJISContextAnalysis(){}
 protected:
   PRInt32 GetOrder(const char* str, PRUint32 *charLen);
 
   PRInt32 GetOrder(const char* str)
   {
     //We only interested in Hiragana, so first byte is '\202'
     if (*str == '\202' && 
           (unsigned char)*(str+1) >= (unsigned char)0x9f && 
diff --git a/extensions/universalchardet/src/base/nsCharSetProber.h b/extensions/universalchardet/src/base/nsCharSetProber.h
--- a/extensions/universalchardet/src/base/nsCharSetProber.h
+++ b/extensions/universalchardet/src/base/nsCharSetProber.h
@@ -56,17 +56,17 @@ public:
   virtual const char* GetCharSetName() = 0;
   virtual nsProbingState HandleData(const char* aBuf, PRUint32 aLen) = 0;
   virtual nsProbingState GetState(void) = 0;
   virtual void      Reset(void)  = 0;
   virtual float     GetConfidence(void) = 0;
   virtual void      SetOpion() = 0;
 
 #ifdef DEBUG_chardet
-  virtual void  DumpStatus() {};
+  virtual void  DumpStatus() {}
 #endif
 
   // Helper functions used in the Latin1 and Group probers.
   // both functions Allocate a new buffer for newBuf. This buffer should be 
   // freed by the caller using PR_FREEIF.
   // Both functions return PR_FALSE in case of memory allocation failure.
   static PRBool FilterWithoutEnglishLetters(const char* aBuf, PRUint32 aLen, char** newBuf, PRUint32& newLen);
   static PRBool FilterWithEnglishLetters(const char* aBuf, PRUint32 aLen, char** newBuf, PRUint32& newLen);
diff --git a/gfx/thebes/public/gfxAtsuiFonts.h b/gfx/thebes/public/gfxAtsuiFonts.h
--- a/gfx/thebes/public/gfxAtsuiFonts.h
+++ b/gfx/thebes/public/gfxAtsuiFonts.h
@@ -112,17 +112,17 @@ protected:
     virtual PRBool SetupCairoFont(gfxContext *aContext);
 };
 
 class THEBES_API gfxAtsuiFontGroup : public gfxFontGroup {
 public:
     gfxAtsuiFontGroup(const nsAString& families,
                       const gfxFontStyle *aStyle,
                       gfxUserFontSet *aUserFontSet);
-    virtual ~gfxAtsuiFontGroup() {};
+    virtual ~gfxAtsuiFontGroup() {}
 
     virtual gfxFontGroup *Copy(const gfxFontStyle *aStyle);
 
     virtual gfxTextRun *MakeTextRun(const PRUnichar* aString, PRUint32 aLength,
                                     const Parameters* aParams, PRUint32 aFlags);
     virtual gfxTextRun *MakeTextRun(const PRUint8* aString, PRUint32 aLength,
                                     const Parameters* aParams, PRUint32 aFlags);
     // When aWrapped is true, the string includes bidi control
diff --git a/gfx/thebes/public/gfxCoreTextFonts.h b/gfx/thebes/public/gfxCoreTextFonts.h
--- a/gfx/thebes/public/gfxCoreTextFonts.h
+++ b/gfx/thebes/public/gfxCoreTextFonts.h
@@ -147,17 +147,17 @@ protected:
     static CTFontDescriptorRef    sDisableLigaturesDescriptor;
 };
 
 class THEBES_API gfxCoreTextFontGroup : public gfxFontGroup {
 public:
     gfxCoreTextFontGroup(const nsAString& families,
                          const gfxFontStyle *aStyle,
                          gfxUserFontSet *aUserFontSet);
-    virtual ~gfxCoreTextFontGroup() {};
+    virtual ~gfxCoreTextFontGroup() {}
 
     virtual gfxFontGroup *Copy(const gfxFontStyle *aStyle);
 
     virtual gfxTextRun *MakeTextRun(const PRUnichar* aString, PRUint32 aLength,
                                     const Parameters* aParams, PRUint32 aFlags);
     virtual gfxTextRun *MakeTextRun(const PRUint8* aString, PRUint32 aLength,
                                     const Parameters* aParams, PRUint32 aFlags);
     // When aWrapped is true, the string includes bidi control
diff --git a/intl/chardet/tests/DetectCharset.cpp b/intl/chardet/tests/DetectCharset.cpp
--- a/intl/chardet/tests/DetectCharset.cpp
+++ b/intl/chardet/tests/DetectCharset.cpp
@@ -49,27 +49,27 @@
 #endif
 #ifdef XP_UNIX
 #include <unistd.h>
 #endif
 
 
 class nsStatis {
 public:
-    nsStatis() { };
-    virtual ~nsStatis() { };
+    nsStatis() { }
+    virtual ~nsStatis() { }
     virtual PRBool HandleData(const char* aBuf, PRUint32 aLen) = 0;
     virtual void   DataEnd() = 0;
     virtual void Report()=0;
 };
 
 class nsBaseStatis : public nsStatis {
 public:
     nsBaseStatis(unsigned char aL, unsigned char aH, float aR) ;
-    virtual ~nsBaseStatis() {};
+    virtual ~nsBaseStatis() {}
     virtual PRBool HandleData(const char* aBuf, PRUint32 aLen);
     virtual void   DataEnd() ;
     virtual void Report();
 protected:
     unsigned char mLWordHi;
     unsigned char mLWordLo;
 private:
     PRUint32 mNumOf2Bytes;
@@ -175,17 +175,17 @@ void nsBaseStatis::Report()
     }
 */
 }
 
 
 class nsSimpleStatis : public nsStatis {
 public:
     nsSimpleStatis(unsigned char aL, unsigned char aH, float aR,const char* aCharset) ;
-    virtual ~nsSimpleStatis() {};
+    virtual ~nsSimpleStatis() {}
     virtual PRBool HandleData(const char* aBuf, PRUint32 aLen);
     virtual void   DataEnd() ;
     virtual void Report();
 protected:
     unsigned char mLWordHi;
     unsigned char mLWordLo;
 private:
     PRUint32 mNumOf2Bytes;
@@ -262,18 +262,18 @@ void usage() {
           "  Data are passed in from STDIN\n"
           ,  MAXBSIZE);
 }
 
 class nsReporter : public nsICharsetDetectionObserver 
 {
    NS_DECL_ISUPPORTS
  public:
-   nsReporter() { };
-   virtual ~nsReporter() { };
+   nsReporter() { }
+   virtual ~nsReporter() { }
 
    NS_IMETHOD Notify(const char* aCharset, nsDetectionConfident aConf)
     {
         printf("RESULT CHARSET : %s\n", aCharset);
         printf("RESULT Confident : %d\n", aConf);
         return NS_OK;
     };
 };
diff --git a/intl/uconv/native/nsNativeUConvService.h b/intl/uconv/native/nsNativeUConvService.h
--- a/intl/uconv/native/nsNativeUConvService.h
+++ b/intl/uconv/native/nsNativeUConvService.h
@@ -42,15 +42,15 @@
 { 0xa1, 0xc3, 0x6e, 0xd0, 0xc1, 0x6e, 0xa0, 0x22 } }
 
 #include "nsINativeUConvService.h"
 
 class NativeUConvService : public nsINativeUConvService
 {
 public:
 
-    NativeUConvService() {};
-    virtual ~NativeUConvService() {};
+    NativeUConvService() {}
+    virtual ~NativeUConvService() {}
 
     NS_DECL_ISUPPORTS
     NS_DECL_NSINATIVEUCONVSERVICE
 };
 
diff --git a/intl/uconv/ucvlatin/nsUnicodeToUTF32.h b/intl/uconv/ucvlatin/nsUnicodeToUTF32.h
--- a/intl/uconv/ucvlatin/nsUnicodeToUTF32.h
+++ b/intl/uconv/ucvlatin/nsUnicodeToUTF32.h
@@ -141,18 +141,18 @@ public:
 class nsUnicodeToUTF32 : public nsUnicodeToUTF32LE
 #elif defined(IS_BIG_ENDIAN)
 class nsUnicodeToUTF32 : public nsUnicodeToUTF32BE
 #else
 #error "Unknown endianness"
 #endif
 {
 public:
-  nsUnicodeToUTF32() {mBOM = 0xFEFF; mHighSurrogate = 0;};
+  nsUnicodeToUTF32() {mBOM = 0xFEFF; mHighSurrogate = 0;}
 
   //--------------------------------------------------------------------
   // Subclassing of nsUnicodeToUTF32Base class [declaration]
-  NS_IMETHOD Reset() {mBOM = 0xFEFF; mHighSurrogate = 0; return NS_OK;};
+  NS_IMETHOD Reset() {mBOM = 0xFEFF; mHighSurrogate = 0; return NS_OK;}
 
 };
 
 #endif /* nsUnicodeToUTF32_h___ */
 
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1074,17 +1074,17 @@ protected:
   // mContentScrollHPosition are only used when it's non-null.
   nsCOMPtr<nsIContent> mContentToScrollTo;
   PRIntn mContentScrollVPosition;
   PRIntn mContentScrollHPosition;
 
   class nsDelayedEvent
   {
   public:
-    virtual ~nsDelayedEvent() {};
+    virtual ~nsDelayedEvent() {}
     virtual void Dispatch(PresShell* aShell) {}
     // This is needed only by nsDelayedFocusBlur.
     virtual PRBool Equals(nsPIDOMEventTarget* aTarget, PRUint32 aEventType)
     {
       return PR_FALSE;
     }
   };
 
diff --git a/modules/plugin/base/src/nsPluginNativeWindowOS2.cpp b/modules/plugin/base/src/nsPluginNativeWindowOS2.cpp
--- a/modules/plugin/base/src/nsPluginNativeWindowOS2.cpp
+++ b/modules/plugin/base/src/nsPluginNativeWindowOS2.cpp
@@ -79,21 +79,21 @@ static ULONG sWM_FLASHBOUNCEMSG = 0;
  */
 
 class PluginWindowEvent : public nsRunnable
 {
 public:
   PluginWindowEvent();
   void Init(const PluginWindowWeakRef &ref, HWND hWnd, ULONG msg, MPARAM mp1, MPARAM mp2);
   void Clear();
-  HWND   GetWnd()    { return mWnd; };
-  ULONG  GetMsg()    { return mMsg; };
-  MPARAM GetWParam() { return mWParam; };
-  MPARAM GetLParam() { return mLParam; };
-  PRBool InUse()     { return (mWnd!=NULL); };
+  HWND   GetWnd()    { return mWnd; }
+  ULONG  GetMsg()    { return mMsg; }
+  MPARAM GetWParam() { return mWParam; }
+  MPARAM GetLParam() { return mLParam; }
+  PRBool InUse()     { return (mWnd!=NULL); }
   
   NS_DECL_NSIRUNNABLE
 
 protected:
   PluginWindowWeakRef mPluginWindowRef;
   HWND   mWnd;
   ULONG  mMsg;
   MPARAM mWParam;
diff --git a/modules/plugin/base/src/nsPluginNativeWindowWin.cpp b/modules/plugin/base/src/nsPluginNativeWindowWin.cpp
--- a/modules/plugin/base/src/nsPluginNativeWindowWin.cpp
+++ b/modules/plugin/base/src/nsPluginNativeWindowWin.cpp
@@ -69,21 +69,21 @@ typedef nsTWeakRef<class nsPluginNativeW
  *  PLEvent handling code
  */
 class PluginWindowEvent : public nsRunnable {
 public:
   PluginWindowEvent();
   void Init(const PluginWindowWeakRef &ref, HWND hWnd, UINT msg, WPARAM wParam,
             LPARAM lParam);
   void Clear();
-  HWND   GetWnd()    { return mWnd; };
-  UINT   GetMsg()    { return mMsg; };
-  WPARAM GetWParam() { return mWParam; };
-  LPARAM GetLParam() { return mLParam; };
-  PRBool InUse()     { return (mWnd!=NULL); };
+  HWND   GetWnd()    { return mWnd; }
+  UINT   GetMsg()    { return mMsg; }
+  WPARAM GetWParam() { return mWParam; }
+  LPARAM GetLParam() { return mLParam; }
+  PRBool InUse()     { return (mWnd!=NULL); }
 
   NS_DECL_NSIRUNNABLE
 
 protected:
   PluginWindowWeakRef mPluginWindowRef;
   HWND   mWnd;
   UINT   mMsg;
   WPARAM mWParam;
diff --git a/netwerk/streamconv/test/TestStreamConv.cpp b/netwerk/streamconv/test/TestStreamConv.cpp
--- a/netwerk/streamconv/test/TestStreamConv.cpp
+++ b/netwerk/streamconv/test/TestStreamConv.cpp
@@ -80,17 +80,17 @@ static NS_DEFINE_CID(kStreamConverterSer
 //   receives the fully converted data, although it doesn't do anything with
 //   the data.
 ////////////////////////////////////////////////////////////////////////
 class EndListener : public nsIStreamListener {
 public:
     // nsISupports declaration
     NS_DECL_ISUPPORTS
 
-    EndListener() {};
+    EndListener() {}
 
     // nsIStreamListener method
     NS_IMETHOD OnDataAvailable(nsIRequest* request, nsISupports *ctxt, nsIInputStream *inStr, 
                                PRUint32 sourceOffset, PRUint32 count)
     {
         nsresult rv;
         PRUint32 read, len;
         rv = inStr->Available(&len);
diff --git a/toolkit/components/remote/nsQtRemoteService.h b/toolkit/components/remote/nsQtRemoteService.h
--- a/toolkit/components/remote/nsQtRemoteService.h
+++ b/toolkit/components/remote/nsQtRemoteService.h
@@ -57,15 +57,15 @@ class nsQtRemoteService : public nsIRemo
                           public nsIObserver
 {
 public:
   // We will be a static singleton, so don't use the ordinary methods.
   NS_DECL_ISUPPORTS
   NS_DECL_NSIREMOTESERVICE
   NS_DECL_NSIOBSERVER
 
-  nsQtRemoteService() { };
+  nsQtRemoteService() { }
 
 private:
-  ~nsQtRemoteService() { };
+  ~nsQtRemoteService() { }
 };
 
 #endif // __nsQtRemoteService_h__
diff --git a/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp b/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp
--- a/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp
+++ b/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp
@@ -781,18 +781,18 @@ nsUrlClassifierStore::RandomNumber(PRInt
 
 // -------------------------------------------------------------------------
 // nsUrlClassifierAddStore class implementation
 
 // This class accesses the moz_classifier table.
 class nsUrlClassifierAddStore: public nsUrlClassifierStore
 {
 public:
-  nsUrlClassifierAddStore() {};
-  virtual ~nsUrlClassifierAddStore() {};
+  nsUrlClassifierAddStore() {}
+  virtual ~nsUrlClassifierAddStore() {}
 
   nsresult Init(nsUrlClassifierDBServiceWorker *worker,
                 mozIStorageConnection *connection,
                 const nsACString& entriesTableName);
 
   void Close();
 
   // Read the entries for a given key/table/chunk from the database
@@ -892,18 +892,18 @@ nsUrlClassifierAddStore::ReadAddEntries(
 
 // -------------------------------------------------------------------------
 // nsUrlClassifierSubStore class implementation
 
 // This class accesses the moz_subs table.
 class nsUrlClassifierSubStore : public nsUrlClassifierStore
 {
 public:
-  nsUrlClassifierSubStore() {};
-  virtual ~nsUrlClassifierSubStore() {};
+  nsUrlClassifierSubStore() {}
+  virtual ~nsUrlClassifierSubStore() {}
 
   nsresult Init(nsUrlClassifierDBServiceWorker *worker,
                 mozIStorageConnection *connection,
                 const nsACString& entriesTableName);
 
   void Close();
 
   // Read an entry from a database statement
diff --git a/toolkit/components/url-classifier/src/nsUrlClassifierUtils.h b/toolkit/components/url-classifier/src/nsUrlClassifierUtils.h
--- a/toolkit/components/url-classifier/src/nsUrlClassifierUtils.h
+++ b/toolkit/components/url-classifier/src/nsUrlClassifierUtils.h
@@ -188,17 +188,17 @@ public:
     mEntryStorage.SetCapacity(mCapacity);
   }
 
 private:
   // One entry in the set.  We maintain a doubly-linked list, with
   // the most recently used entry at the front.
   class Entry {
   public:
-    Entry() : mNext(nsnull), mPrev(nsnull) {};
+    Entry() : mNext(nsnull), mPrev(nsnull) {}
     ~Entry() { }
 
     Entry *mNext;
     Entry *mPrev;
     nsCString mFragment;
   };
 
   void LinkEntry(Entry *entry)
diff --git a/toolkit/system/windowsproxy/nsWindowsSystemProxySettings.cpp b/toolkit/system/windowsproxy/nsWindowsSystemProxySettings.cpp
--- a/toolkit/system/windowsproxy/nsWindowsSystemProxySettings.cpp
+++ b/toolkit/system/windowsproxy/nsWindowsSystemProxySettings.cpp
@@ -49,21 +49,21 @@
 #include "nsIURI.h"
 
 class nsWindowsSystemProxySettings : public nsISystemProxySettings
 {
 public:
     NS_DECL_ISUPPORTS
     NS_DECL_NSISYSTEMPROXYSETTINGS
 
-    nsWindowsSystemProxySettings() {};
+    nsWindowsSystemProxySettings() {}
     nsresult Init();
 
 private:
-    ~nsWindowsSystemProxySettings() {};
+    ~nsWindowsSystemProxySettings() {}
 
     nsCOMPtr<nsIWindowsRegKey> mKey;
     PRBool MatchOverride(const nsACString& aHost);
     PRBool PatternMatch(const nsACString& aHost, const nsACString& aOverride);
 };
 
 NS_IMPL_ISUPPORTS1(nsWindowsSystemProxySettings, nsISystemProxySettings)
 
diff --git a/uriloader/prefetch/nsOfflineCacheUpdate.cpp b/uriloader/prefetch/nsOfflineCacheUpdate.cpp
--- a/uriloader/prefetch/nsOfflineCacheUpdate.cpp
+++ b/uriloader/prefetch/nsOfflineCacheUpdate.cpp
@@ -87,17 +87,17 @@ static const PRUint32 kRescheduleLimit =
 static PRLogModuleInfo *gOfflineCacheUpdateLog;
 #endif
 #define LOG(args) PR_LOG(gOfflineCacheUpdateLog, 4, args)
 #define LOG_ENABLED() PR_LOG_TEST(gOfflineCacheUpdateLog, 4)
 
 class AutoFreeArray {
 public:
     AutoFreeArray(PRUint32 count, char **values)
-        : mCount(count), mValues(values) {};
+        : mCount(count), mValues(values) {}
     ~AutoFreeArray() { NS_FREE_XPCOM_ALLOCATED_POINTER_ARRAY(mCount, mValues); }
 private:
     PRUint32 mCount;
     char **mValues;
 };
 
 static nsresult
 DropReferenceFromURL(nsIURI * aURI)
diff --git a/widget/src/beos/nsChildView.h b/widget/src/beos/nsChildView.h
--- a/widget/src/beos/nsChildView.h
+++ b/widget/src/beos/nsChildView.h
@@ -38,17 +38,17 @@
 #define nsChildView_h__
 
 #include "nsWindow.h"
 
 class nsChildView : public nsWindow 
 {
 public:
 	nsChildView();
-	virtual PRBool          IsChild() { return(PR_TRUE); };
+	virtual PRBool          IsChild() { return(PR_TRUE); }
 	
 	NS_IMETHOD              Show(PRBool bState);
 	NS_IMETHOD              SetTitle(const nsAString& aTitle);
 
 protected:
 
 	virtual nsresult        StandardWindowCreate(nsIWidget *aParent,
 	                                             const nsRect &aRect,
diff --git a/widget/src/gtk2/nsPrintSettingsGTK.h b/widget/src/gtk2/nsPrintSettingsGTK.h
--- a/widget/src/gtk2/nsPrintSettingsGTK.h
+++ b/widget/src/gtk2/nsPrintSettingsGTK.h
@@ -72,18 +72,18 @@ public:
   void SetGtkPageSetup(GtkPageSetup *aPageSetup);
 
   GtkPrintSettings* GetGtkPrintSettings() { return mPrintSettings; };
   void SetGtkPrintSettings(GtkPrintSettings *aPrintSettings);
 
   GtkPrinter* GetGtkPrinter() { return mGTKPrinter; };
   void SetGtkPrinter(GtkPrinter *aPrinter);
 
-  PRBool GetForcePrintSelectionOnly() { return mPrintSelectionOnly; };
-  void SetForcePrintSelectionOnly(PRBool aPrintSelectionOnly) { mPrintSelectionOnly = aPrintSelectionOnly; };
+  PRBool GetForcePrintSelectionOnly() { return mPrintSelectionOnly; }
+  void SetForcePrintSelectionOnly(PRBool aPrintSelectionOnly) { mPrintSelectionOnly = aPrintSelectionOnly; }
 
   // If not printing the selection, this is stored in the GtkPrintSettings. Printing the
   // selection is stored as a protected boolean (mPrintSelectionOnly).
   NS_IMETHOD GetPrintRange(PRInt16 *aPrintRange);
   NS_IMETHOD SetPrintRange(PRInt16 aPrintRange);
 
   // The page range is stored as as single range in the GtkPrintSettings object.
   NS_IMETHOD GetStartPageRange(PRInt32 *aStartPageRange);
diff --git a/widget/src/qt/mozqwidget.h b/widget/src/qt/mozqwidget.h
--- a/widget/src/qt/mozqwidget.h
+++ b/widget/src/qt/mozqwidget.h
@@ -16,17 +16,17 @@ public:
 
     ~MozQWidget();
 
     /**
      * Mozilla helper.
      */
     void setModal(bool);
     bool SetCursor(nsCursor aCursor);
-    void dropReceiver() { mReceiver = 0x0; };
+    void dropReceiver() { mReceiver = 0x0; }
     nsWindow* getReceiver() { return mReceiver; };
 
 protected:
     virtual bool event(QEvent *ev);
 private:
     nsWindow *mReceiver;
 };
 
diff --git a/widget/src/qt/nsAppShell.h b/widget/src/qt/nsAppShell.h
--- a/widget/src/qt/nsAppShell.h
+++ b/widget/src/qt/nsAppShell.h
@@ -49,17 +49,17 @@
  */
 
 class nsAppShell : public QObject,
                    public nsBaseAppShell
 {
   Q_OBJECT
 
 public:
-  nsAppShell() { };
+  nsAppShell() { }
 
   nsresult Init();
 
   virtual bool event (QEvent *e);
 
 protected:
   virtual void ScheduleNativeEventCallback();
   virtual PRBool ProcessNextNativeEvent(PRBool mayWait);
diff --git a/widget/src/windows/nsScreenManagerWin.h b/widget/src/windows/nsScreenManagerWin.h
--- a/widget/src/windows/nsScreenManagerWin.h
+++ b/widget/src/windows/nsScreenManagerWin.h
@@ -47,17 +47,17 @@
 class nsIScreen;
 
 //------------------------------------------------------------------------
 
 class ScreenListItem
 {
 public:
   ScreenListItem ( HMONITOR inMon, nsIScreen* inScreen )
-    : mMon(inMon), mScreen(inScreen) { } ;
+    : mMon(inMon), mScreen(inScreen) { } 
   
   HMONITOR mMon;
   nsCOMPtr<nsIScreen> mScreen;
 };
 
 class nsScreenManagerWin : public nsIScreenManager
 {
 public:
diff --git a/xpcom/base/nsAutoRef.h b/xpcom/base/nsAutoRef.h
--- a/xpcom/base/nsAutoRef.h
+++ b/xpcom/base/nsAutoRef.h
@@ -493,17 +493,17 @@ template <class T> class nsAutoRefTraits
 
 template <class T>
 class nsPointerRefTraits
 {
 public:
     // The handle is a pointer to T.
     typedef T* RawRef;
     // A NULL pointer does not have a resource.
-    static RawRef Void() { return nsnull; };
+    static RawRef Void() { return nsnull; }
 };
 
 /**
  * template <class T> class nsSimpleRef
  *
  * Constructs a non-smart reference, and provides methods to test whether
  * there is an associated resource and (if so) get its raw handle.
  *
diff --git a/xpcom/io/nsLocalFileWin.cpp b/xpcom/io/nsLocalFileWin.cpp
--- a/xpcom/io/nsLocalFileWin.cpp
+++ b/xpcom/io/nsLocalFileWin.cpp
@@ -125,21 +125,21 @@ private:
 
 //----------------------------------------------------------------------------
 // short cut resolver
 //----------------------------------------------------------------------------
 #ifdef WINCE
 class ShortcutResolver
 {
 public:
-    ShortcutResolver() {};
+    ShortcutResolver() {}
     // nonvirtual since we're not subclassed
-    ~ShortcutResolver() {};
+    ~ShortcutResolver() {}
 
-    nsresult Init() { return NS_OK; }; // nothing to do
+    nsresult Init() { return NS_OK; } // nothing to do
     nsresult Resolve(const WCHAR* in, WCHAR* out);
 };
 
 // |out| must be an allocated buffer of size MAX_PATH
 nsresult
 ShortcutResolver::Resolve(const WCHAR* in, WCHAR* out)
 {
     return SHGetShortcutTarget(in, out, MAX_PATH) ? NS_OK : NS_ERROR_FAILURE;
diff --git a/xpcom/reflect/xptcall/src/md/unix/vtable_layout_x86.cpp b/xpcom/reflect/xptcall/src/md/unix/vtable_layout_x86.cpp
--- a/xpcom/reflect/xptcall/src/md/unix/vtable_layout_x86.cpp
+++ b/xpcom/reflect/xptcall/src/md/unix/vtable_layout_x86.cpp
@@ -11,17 +11,17 @@
 
 class test {
 public:
       virtual int     t1(void);
       virtual int     t2(void);
       int             x;
 };
 
-test::test() { this->x = 0x12121212; };
+test::test() { this->x = 0x12121212; }
 
 int test::t1(void) { return 1; }
 int test::t2(void) { return 2; }
 
 void die(char *x) {
       fprintf(stderr, "%s\n", x);
       exit(1);
 }
diff --git a/xpcom/tests/TestAutoPtr.cpp b/xpcom/tests/TestAutoPtr.cpp
--- a/xpcom/tests/TestAutoPtr.cpp
+++ b/xpcom/tests/TestAutoPtr.cpp
@@ -39,24 +39,24 @@
 
 #include "nsAutoPtr.h"
 #include <stdio.h>
 #include "nscore.h"
 
 class TestObjectBaseA {
     public:
         // Virtual dtor for deleting through base class pointer
-        virtual ~TestObjectBaseA() { };
+        virtual ~TestObjectBaseA() { }
         int fooA;
 };
 
 class TestObjectBaseB {
     public:
         // Virtual dtor for deleting through base class pointer
-        virtual ~TestObjectBaseB() { };
+        virtual ~TestObjectBaseB() { }
         int fooB;
 };
 
 class TestObject : public TestObjectBaseA, public TestObjectBaseB {
     public:
         TestObject()
         {
             printf("  Creating TestObject %p.\n",
diff --git a/xpcom/tests/TestHashtables.cpp b/xpcom/tests/TestHashtables.cpp
--- a/xpcom/tests/TestHashtables.cpp
+++ b/xpcom/tests/TestHashtables.cpp
@@ -98,17 +98,17 @@ EntityNode gEntities[] = {
 class EntityToUnicodeEntry : public PLDHashEntryHdr
 {
 public:
   typedef const char* KeyType;
   typedef const char* KeyTypePointer;
 
   EntityToUnicodeEntry(const char* aKey) { mNode = nsnull; }
   EntityToUnicodeEntry(const EntityToUnicodeEntry& aEntry) { mNode = aEntry.mNode; }
-  ~EntityToUnicodeEntry() { };
+  ~EntityToUnicodeEntry() { }
 
   PRBool KeyEquals(const char* aEntity) const { return !strcmp(mNode->mStr, aEntity); }
   static const char* KeyToPointer(const char* aEntity) { return aEntity; }
   static PLDHashNumber HashKey(const char* aEntity) { return HashString(aEntity); }
   enum { ALLOW_MEMMOVE = PR_TRUE };
 
   const EntityNode* mNode;
 };
