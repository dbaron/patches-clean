From: Timothy Nikkel <tnikkel@gmail.com>

Bug 445765. In GTK screen manager, for the common case of just one screen don't make potentially expensive system calls to try to determine which screen we are on.  r=dbaron

diff --git a/widget/src/gtk2/nsScreenManagerGtk.cpp b/widget/src/gtk2/nsScreenManagerGtk.cpp
--- a/widget/src/gtk2/nsScreenManagerGtk.cpp
+++ b/widget/src/gtk2/nsScreenManagerGtk.cpp
@@ -337,18 +337,31 @@ nsScreenManagerGtk :: GetNumberOfScreens
   *aNumberOfScreens = mCachedScreenArray.Count();
   return NS_OK;
   
 } // GetNumberOfScreens
 
 NS_IMETHODIMP
 nsScreenManagerGtk :: ScreenForNativeWidget (void *aWidget, nsIScreen **outScreen)
 {
-  // I don't know how to go from GtkWindow to nsIScreen, especially
-  // given xinerama and stuff, so let's just do this
-  gint x, y, width, height, depth;
-  x = y = width = height = 0;
+  nsresult rv;
+  rv = EnsureInit();
+  if (NS_FAILED(rv)) {
+    NS_ERROR("nsScreenManagerGtk::EnsureInit() failed from ScreenForNativeWidget\n");
+    return rv;
+  }
 
-  gdk_window_get_geometry(GDK_WINDOW(aWidget), &x, &y, &width, &height,
-                          &depth);
-  gdk_window_get_origin(GDK_WINDOW(aWidget), &x, &y);
-  return ScreenForRect(x, y, width, height, outScreen);
+  if (mCachedScreenArray.Count() > 1) {
+    // I don't know how to go from GtkWindow to nsIScreen, especially
+    // given xinerama and stuff, so let's just do this
+    gint x, y, width, height, depth;
+    x = y = width = height = 0;
+
+    gdk_window_get_geometry(GDK_WINDOW(aWidget), &x, &y, &width, &height,
+                            &depth);
+    gdk_window_get_origin(GDK_WINDOW(aWidget), &x, &y);
+    rv = ScreenForRect(x, y, width, height, outScreen);
+  } else {
+    rv = GetPrimaryScreen(outScreen);
+  }
+
+  return rv;
 }
